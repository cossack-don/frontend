(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{298:function(t,s,a){t.exports=a.p+"assets/img/imgqqq.10598129.png"},299:function(t,s,a){t.exports=a.p+"assets/img/img313.754fe7b6.png"},363:function(t,s,a){"use strict";a.r(s);var n=a(16),o=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dom-и-shadow-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-и-shadow-dom"}},[t._v("#")]),t._v(" DOM и Shadow DOM")]),t._v(" "),s("h2",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Определение")]),t._v(" "),s("p",[t._v("DOM – это объектное представление исходного HTML-кода документа.\nПроцесс формирования DOM происходит так: браузер получает HTML-код, парсит его и строит DOM.")])]),t._v(" "),s("p",[t._v("Итак, DOM – это объектная модель документа, которую\nбраузер создаёт в памяти компьютера на основании HTML-кода.")]),t._v(" "),s("p",[t._v("Например, с помощью JavaScript мы можем:")]),t._v(" "),s("ul",[s("li",[t._v("добавлять, изменять и удалять любые HTML-элементы на странице, в том числе их атрибуты и стили;")]),t._v(" "),s("li",[t._v("получать доступ к данным формы и управлять ими;")]),t._v(" "),s("li",[t._v("реагировать на все существующие HTML-события на странице и создавать новые;")]),t._v(" "),s("li",[t._v("рисовать графику на HTML-элементе canvas и многое другое.")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(298),alt:"Alt for Imsage"}})]),t._v(" "),s("h2",{attrs:{id:"shadow-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shadow-dom"}},[t._v("#")]),t._v(" Shadow DOM")]),t._v(" "),s("p",[t._v("Вы можете думать о теневом DOM как о «DOM внутри DOM». Это собственное\nизолированное дерево DOM со своими элементами и стилями, полностью изолированное\nот исходного DOM.")]),t._v(" "),s("p",[t._v("Хотя только недавно его стали использовать программисты, теневой DOM\nгодами использовался пользовательскими агентами для создания и оформления\nсложных компонентов, таких как элементы формы. Для примера возьмем элемент\nввода диапазона. Чтобы создать его на странице,\nвсе, что нам нужно сделать, это добавить следующий элемент:")]),t._v(" "),s("p",[s("img",{attrs:{src:a(299),alt:"Alt for Imsage"}})]),t._v(" "),s("p",[t._v('Обратите внимание, что мы не просто использовали элемент "a"  в качестве теневого хоста, поскольку некоторые элементы,\nв первую очередь интерактивные элементы, не могут быть теневыми хостами.')]),t._v(" "),s("p",[t._v("Чтобы прикрепить теневой DOM к нашему хосту, мы используем метод  attachShadow().")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shadowEl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".shadow-host"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shadow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" shadowEl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachShadow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'open'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"dom-против-shadow-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-против-shadow-dom"}},[t._v("#")]),t._v(" DOM против shadow DOM")]),t._v(" "),s("p",[t._v("В некотором смысле, теневой DOM является «облегченной» версией DOM. Как и DOM,\nон является представлением элементов HTML, которое используется для определения того,\nчто следует отображать на странице, и позволяет изменять элементы. Но в отличие от DOM,\nтеневой DOM не использует глобальные стили документа. Теневой DOM, как следует из названия,\nвсегда присоединен к элементу в обычном DOM. Без базовых элементов DOM, теневой DOM не существует.")])])}),[],!1,null,null,null);s.default=o.exports}}]);